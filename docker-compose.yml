services:
  db:
    image: mysql:8.0
    container_name: vehicle-manager-mysql
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped
    networks:
      - app-net

  backend:
    build:
      context: ./vehicle-manager-backend
      dockerfile: Dockerfile
    container_name: vehicle-manager-backend
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:mysql://db:3306/${MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true"
      QUARKUS_DATASOURCE_USERNAME: ${MYSQL_USER}
      QUARKUS_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      QUARKUS_HTTP_PORT: ${QUARKUS_HTTP_PORT}
      QUARKUS_HTTP_CORS: ${QUARKUS_HTTP_CORS}
      QUARKUS_HTTP_CORS_ORIGINS: ${QUARKUS_HTTP_CORS_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-net

  frontend:
    build:
      context: ./vehicle-manager-frontend
      dockerfile: Dockerfile
      args:
        NGINX_PUBLIC_PATH: /
    container_name: vehicle-manager-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
